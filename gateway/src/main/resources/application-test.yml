spring:
  main:
    allow-bean-definition-overriding: true
  cloud:
    gateway:
      ## 路由
      routes:
        ## id只要唯一即可，名称任意
        - id: blog-user-boot
          uri: lb://blog-user-boot
          predicates:
            ## Path Route Predicate Factory断言
            - Path=/blog-user-boot/**
        - id: blog-auth-server
          uri: lb://blog-auth-server
          predicates:
            ## Path Route Predicate Factory断言
            - Path=/blog-auth-server/**
        - id: blog-article
          uri: lb://blog-article
          predicates:
            ## Path Route Predicate Factory断言
            - Path=/blog-article/**
        - id: blog-comments
          uri: lb://blog-comments
          predicates:
            ## Path Route Predicate Factory断言
            - Path=/blog-comments/**
        - id: blog-picture
          uri: lb://blog-picture
          predicates:
            ## Path Route Predicate Factory断言
            - Path=/blog-picture/**
        - id: blog-friendlinks
          uri: lb://blog-friendlinks
          predicates:
            ## Path Route Predicate Factory断言
            - Path=/blog-friendlinks/**
        - id: blog-file-server
          uri: lb://blog-file-server
          predicates:
            ## Path Route Predicate Factory断言
            - Path=/blog-file-server/**
    ## 整合sentinel，配置sentinel控制台的地址
    sentinel:
      transport:
        ## 指定控制台的地址
        dashboard: 127.0.0.1:8856
        port: 8719
        ## 指定本服务的公网IP，否则心跳包监听不到
        client-ip: 127.0.0.1
      #配置限流之后，响应内容
      scg:
        fallback:
          ## 两种模式，一种是response返回文字提示信息，
          ## 一种是redirect，重定向跳转，需要同时配置redirect(跳转的uri)
          mode: response
          ## 响应的状态
          response-status: 200
          ## 响应内容
          response-body: '{"code": 3002,"msg": "网络拥挤，请稍后再试...","data": null}'
      ## nacos持久化配置
      datasource:
        ## 配置流控规则，名字任意
        ds-flow:
          nacos:
            ## nacos的地址
            server-addr: ${spring.cloud.nacos.config.server-addr}
            username: ${spring.cloud.nacos.config.username}
            password: ${spring.cloud.nacos.config.password}
            namespace: ${spring.cloud.nacos.config.namespace}
            ## 配置ID
            dataId: ${spring.application.name}-flow
            ## 配置分组，默认是DEFAULT_GROUP
            groupId: DEFAULT_GROUP
            ## 配置存储的格式
            data-type: json
            ## rule-type设置对应得规则类型，总共七大类型，在com.alibaba.cloud.sentinel.datasource.RuleType这个枚举类中有体现
            # gw-flow 是网关流控，与其他微服务规则不通，根据routeId和API分组进行流控
            rule-type: gw-flow
        ##ApI分组的配置
        ds-api-group:
          nacos:
            ## nacos的地址
            server-addr: ${spring.cloud.nacos.config.server-addr}
            username: ${spring.cloud.nacos.config.username}
            password: ${spring.cloud.nacos.config.password}
            namespace: ${spring.cloud.nacos.config.namespace}
            ## 配置ID
            dataId: ${spring.application.name}-api-group
            ## 配置分组，默认是DEFAULT_GROUP
            groupId: DEFAULT_GROUP
            ## 配置存储的格式
            data-type: json
            ## rule-type设置对应得规则类型，总共七大类型，在com.alibaba.cloud.sentinel.datasource.RuleType这个枚举类中有体现
            rule-type: gw-api-group
        ## 配置降级规则，名字任意
        ds-degrade:
          nacos:
            ## nacos的地址
            server-addr: ${spring.cloud.nacos.config.server-addr}
            username: ${spring.cloud.nacos.config.username}
            password: ${spring.cloud.nacos.config.password}
            namespace: ${spring.cloud.nacos.config.namespace}
            ## 配置ID
            dataId: ${spring.application.name}-degrade
            ## 配置分组，默认是DEFAULT_GROUP
            groupId: DEFAULT_GROUP
            ## 配置存储的格式
            data-type: json
            ## rule-type设置对应得规则类型，总共七大类型，在com.alibaba.cloud.sentinel.datasource.RuleType这个枚举类中有体现
            rule-type: degrade
  redis:
    host: 127.0.0.1
    password: live4dream
    port: 6379
    timeout: 15000
    jedis:
      pool:
        max-active: 600
        max-idle: 300
        max-wait: 15000
        min-idle: 10
oauth:
  # JWT令牌的key
  server:
    signKey: blog
    ignore:
      urls:
        - /blog-auth-server/oauth/token
        - /blog-auth-server/oauth/authorize
        - /blog-auth-server/oauth/check_token
        - /swagger-ui.html
        - /swagger-ui/*
        - /swagger-resources/**
        - /v2/api-docs
        - /v3/api-docs
        - /webjars/**
        - /doc.html
        - /**/v2/api-docs
        - /blog-article/front/**
        - /blog-picture/front/**
        - /blog-friendlinks/front/**
        - /blog-comments/comment/list
        - /blog-comments/comment/add
        - /blog-comments/message/add
        - /blog-comments/message/list
        - /actuator/**
        - /instances/**

